<UserControl x:Class="Facturon.App.Views.InvoiceDetailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="clr-namespace:Facturon.App.Views"
             mc:Ignorable="d">
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0">
            <TextBlock Text="Invoice Number:"/>
            <TextBox x:Name="InvoiceNumberBox"
                     AutomationProperties.Name="InvoiceNumber"
                     Text="{Binding Invoice.Number}"
                     IsEnabled="{Binding DataContext.DetailVisible, RelativeSource={RelativeSource AncestorType=Window}}"/>
            <TextBlock Text="Issuer:" Margin="0,10,0,0"/>
            <TextBox x:Name="IssuerBox"
                     AutomationProperties.Name="Issuer"
                     Text="{Binding Invoice.Issuer}"
                     IsEnabled="{Binding DataContext.DetailVisible, RelativeSource={RelativeSource AncestorType=Window}}"/>
            <TextBlock Text="Date:" Margin="0,10,0,0"/>
            <TextBox x:Name="InvoiceDatePicker"
                     AutomationProperties.Name="InvoiceDate"
                     Text="{Binding Invoice.Date}"
                     IsEnabled="{Binding DataContext.DetailVisible, RelativeSource={RelativeSource AncestorType=Window}}"/>
            <CheckBox x:Name="IsGrossBasedCheckBox"
                      AutomationProperties.Name="PricesIncludeVAT"
                      Content="Prices include VAT"
                      IsChecked="{Binding IsGrossBased}"
                      Margin="0,10,0,0"
                      IsEnabled="{Binding DataContext.DetailVisible, RelativeSource={RelativeSource AncestorType=Window}}"/>
            <TextBlock Text="Payment Method:" Margin="0,10,0,0" />
            <views:EditableComboWithAdd Width="200"
                                        DataContext="{Binding PaymentMethodSelector}"
                                        IsEnabled="{Binding DataContext.DetailVisible, RelativeSource={RelativeSource AncestorType=Window}}" />
        </StackPanel>
        <StackPanel Grid.Row="1" Margin="0,10,0,0">
            <views:InvoiceItemInputView DataContext="{Binding InputRow}"
                                        IsEnabled="{Binding DataContext.DetailVisible, RelativeSource={RelativeSource AncestorType=Window}}" />
            <DataGrid x:Name="ItemsGrid"
                      AutomationProperties.Name="InvoiceItems"
                      ItemsSource="{Binding InvoiceItems}"
                      SelectedItem="{Binding SelectedInvoiceItem}"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      SelectionUnit="FullRow"
                      Margin="0,5,0,0"
                      PreviewKeyDown="ItemsGrid_PreviewKeyDown"
                      IsEnabled="{Binding DataContext.DetailVisible, RelativeSource={RelativeSource AncestorType=Window}}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Product"
                                        Binding="{Binding Product.Name}"/>
                    <DataGridTextColumn Header="Quantity"
                                        Binding="{Binding Quantity, StringFormat=F2}"/>
                    <DataGridTextColumn Header="Unit price"
                                        Binding="{Binding UnitPrice, StringFormat=F2}"/>
                    <DataGridTextColumn Header="Tax %"
                                        Binding="{Binding TaxRateValue, StringFormat=F0}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Tax amount"
                                        Binding="{Binding TaxAmount, StringFormat=F2}"/>
                    <DataGridTextColumn Header="Net amount"
                                        Binding="{Binding NetAmount, StringFormat=F2}"/>
                    <DataGridTextColumn Header="Gross amount"
                                        Binding="{Binding GrossAmount, StringFormat=F2}"/>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>

        <StackPanel Grid.Row="2" Margin="0,10,0,0">
            <Separator />
            <Grid Margin="0,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Net total:" />
                <TextBlock x:Name="NetTotalText" AutomationProperties.Name="NetTotal" Grid.Row="0" Grid.Column="1" Text="{Binding InvoiceTotals.NetTotal, StringFormat=F2}" HorizontalAlignment="Right" />
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Tax:" Margin="0,5,0,0" />
                <TextBlock x:Name="TaxTotalText" AutomationProperties.Name="TaxTotal" Grid.Row="1" Grid.Column="1" Text="{Binding InvoiceTotals.TaxTotal, StringFormat=F2}" HorizontalAlignment="Right" Margin="0,5,0,0" />
                <TextBlock Grid.Row="2" Grid.Column="0" Text="Total:" Margin="0,5,0,0" />
                <TextBlock x:Name="TotalText" AutomationProperties.Name="InvoiceTotal" Grid.Row="2" Grid.Column="1" Text="{Binding InvoiceTotals.GrossTotal, StringFormat=F2}" HorizontalAlignment="Right" Margin="0,5,0,0" />
            </Grid>
            <DataGrid ItemsSource="{Binding InvoiceTotals.ByTaxRate}"
                      AutoGenerateColumns="False"
                      HeadersVisibility="Column"
                      IsReadOnly="True"
                      Margin="0,10,0,0">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Tax %" Binding="{Binding TaxCode}" />
                    <DataGridTextColumn Header="Net" Binding="{Binding Net, StringFormat=F2}" />
                    <DataGridTextColumn Header="VAT" Binding="{Binding Vat, StringFormat=F2}" />
                    <DataGridTextColumn Header="Gross" Binding="{Binding Gross, StringFormat=F2}" />
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Orientation="Horizontal" Margin="0,10,0,0" HorizontalAlignment="Right">
                <Button Content="Save"
                        Width="75"
                        Margin="0,0,5,0"
                        Command="{Binding DataContext.SaveInvoiceCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                <Button Content="Cancel"
                        Width="75"
                        Command="{Binding DataContext.CancelInvoiceCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
